version: '3.7'

volumes:
  pgdata:

services:
  reverseproxy:
    ports:
      - "44395:44395"
    build:
      context: .
      # NOTE!!!
      # Even though we keep nginx.Dockerfile inside /nginx solution folder,
      # docker-compose tool is not aware of it since it is only a Visual Studio construct.
      # On the filesystem nginx.Dockerfile is on the same level as docker-compose.yml
      dockerfile: nginx/nginx.Dockerfile
    depends_on:
      - stackunderflow.identity
    networks:
      sunet:
        aliases:
          - "id-local.stack-underflow.com"
          - "api-local.stack-underflow.com"
  stackunderflow.identity:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:7000
    #ports:
    #  - "7000:7000"
    env_file: .env
    image: ${DOCKER_REGISTRY-}stackunderflowidentity
    build:
      context: .
      dockerfile: src/StackUnderflow.Identity/Dockerfile
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - sunet
  stackunderflow.api:
    #image: ${DOCKER_REGISTRY-}stackunderflowapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
    env_file: .env
    #ports:
    #  - "5000:5000"
    build:
      context: .
      dockerfile: src/StackUnderflow.Api/Dockerfile
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - sunet
  stackunderflow.sql:
    image: postgres:12-buster
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    expose:
      - "5432"
    command: "-p 5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./sql/InitializeStackUnderflowDb.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
      - ./sql/InitializeStackUnderflowIdentityDb.sql:/docker-entrypoint-initdb.d/docker_postgres_identity_init.sql
    networks:
      - sunet
  # Comment the below service back in if you want
  # migrations to happen on docker-compose up.
  # Don't forget to update Migrations project's connection strings.
  #stackunderflow.migrations:
  #  image: ${DOCKER_REGISTRY-}stackunderflowsql
  #  depends_on:
  #    - stackunderflow.sql
  #  build:
  #    context: .
  #    dockerfile: src/StackUnderflow.Migrations/Dockerfile
  #  networks:
  #    - sunet
  stackunderflow.workerservices:
    environment:
      - DOTNET_ENVIRONMENT=Development
    image: ${DOCKER_REGISTRY-}stackunderflowworkerservices
    env_file: .env
    depends_on:
      - stackunderflow.sql
    build:
      context: .
      dockerfile: src/StackUnderflow.WorkerServices/Dockerfile
    networks:
      - sunet
  stackunderflow.seq:
    ports:
      - "5341:80"
    image: datalust/seq
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
    networks:
      - sunet
  stackunderflow.smtp:
    ports:
      - "5010:80"
    image: rnwood/smtp4dev
    restart: always
    networks:
      - sunet
networks:
  sunet: {}