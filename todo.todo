
  Moving to production:
    ☐ Use https instead of http on React server.
    ☐ Https cert
    ☐ Security: connection stringove razraditi: dev, prod

Front end:
  ☐ Natjerati ga da u Profile.js pročita getUser() kako spada. Na temelju toga onda pokazati SignIn/SignOut gumbe.
  ☐ Add styles
  ☐ Bug:
    ☐ Stalno se reloada front end.
    ✔ Warning: [Deprecation] Synchronous XMLHttpRequest on the main thread is deprecated because of its detrimental effects to the end user's experience. For more help, check https://xhr.spec.whatwg.org/. @done (18. 02. 2021. 21:52:45)
    ☐ Tags textbox: every whitespace is a new tag in Redux store.
    ☐ Mislim da sam krivo dizajnirao komponente. Primjer:
      ☐ Novi question -> upiši vrijednosti -> stisni Clear.
      ☐ U callbacku za clear (onClearHandle) ja moram ručno (!) očistiti i lokalni `editedQuestion` i Redux store `draftQuestion`.
      ☐ U biti sam poništio one-way binding.
      ☐ Treba dobro razmisliti o dizajnu tih edit existing i add new komponenti.
    ☐ Error handling sa API-ja mi se ne čini da radi dobro. Simuliraj exception na Apiju pa vidi što se dogodi na front endu.
  ☐ Fix git client so as I don't have to re-enter user/pass on every push. Use SSL.
  ☐ Logging
  ✔ Error component. @done (18. 02. 2021. 23:12:48)
  ☐ Protected route: new question
  ☐ Integrirati UserManager u React Context: https://dev.to/tappyy/oidc-authentication-with-react-identity-server-4-3h0d
  ☐ AuthService.js - hardkodiran localhost sa portovima.
  ☐ Additional features:
    ☐ Unaccept answer.
    ☐ Tags are specified in UI using ids. This should be fetched from API and name should be represented. Should be clickable.

Backend:
  Authentication And Authorization:
    ☐ User Management 
      ☐ Should be unique email on IdP.
      ☐ Edit account on SU Api and front end.
      ☐ On logout, while still on IdP, before it redirects back, a page is shown briefly. Change text on it so it says "If it does not redirect yadda yadda yadda".
    ☐ API - add policies
    ☐ Komponenta signinOidc redirecta na '/'. Neka redirecta tamo gdje si zadnje bio. Pretraži IdS4 za "returnUrl" parametar.
    ☐ onDelete: ReferentialAction.Cascade
      ☐ Ako pogledaš 20210130221500_UserRole.cs vidjet ćeš taj redak. Što to točno znači?
      ✔ IdP: CORS za dev i prod env. @done (27. 02. 2021. 23:16:17)
    ✔ Roles @today @done (24. 02. 2021. 23:06:37)
      ✔ User @done (24. 02. 2021. 23:06:29)
      ✔ Moderator @done (24. 02. 2021. 23:06:30)
        ✔ Može editirati svaki resurs. @done (24. 02. 2021. 23:06:30)

  Cross-Cutting Concerns:
    ☐ Security
      ✔ Avoid XSS in React @done (19. 02. 2021. 23:16:00)
      ✔ Sanitize outputs in React @done (19. 02. 2021. 23:16:05)
      ✔ Content Security Policy @done (25. 02. 2021. 22:16:36)
        ✔ Ne dopustiti inline scripts @done (21. 02. 2021. 22:13:57)
        ✔ Riješiti inlined React runtime js @done (21. 02. 2021. 21:42:28)
        ✔ Ne dopustiti inline styles @done (25. 02. 2021. 22:16:35)
        ✔ iframe za silent auth treba biti dopušten @done (21. 02. 2021. 21:42:41)
        ✔ Kako učiniti da CSP bude drugačiji preko raznih okolina? @done (22. 02. 2021. 00:11:30)
          ✔ CSP treba samo na produkciji. @done (22. 02. 2021. 00:11:29)
      ✔ Https to API @done (24. 02. 2021. 23:06:46)
      ☐ Https to Identity
      ☐ Https to Front end
      ✔ Add HSTS to API. @done (25. 02. 2021. 22:16:27)
      ✔ Secure Application Secrets @done (26. 02. 2021. 22:20:24)
      ☐ React: remove source maps in production
    ☐ Logging
      ☐ Problem: LoggingFilter je ok zasad, ali scopeovi se ne logiraju za exception. Valjda zato jer ApiExceptionHandlerMiddleware nije unutar Action filtera.
        ☐ To ću moći pokušati riješiti tek kad upogonim Identity Server. Onda bih mogao probati prebaciti kreiranje Scopeova u ApiExceptionHandlerMiddleware i otamo povući User Id i Claimove.
      ☐ Kako definirati logging folder na fleksibilan način?
      ☐ Good logging levels:
        ☐ For dev
        ☐ For prod
      ☐ Research što sve uopće logirati?
    ☐ Prepare for production.
    ☐ Migrate to net 5.0
    ☐ Some projects are built against netstandard2.0, others against netstandard2.1

  Must Have:
    ☐ Options class
    ☐ Move all AutoMapper profiles to appropriate model classes.
    ☐ QuestionSummariesController bi trebao nasljeđivati od ApiControllerBase.
    ☐ CORS
      ☐ Bolje definirati, trenutno dopuštamo sve.
    ☐ Unit tests: rerun, review, fix.
    ☐ Azure
    ☐ Startup.cs
      ☐ Tidy up all the registrations.
      ☐ services.AddController()
  Bugs:
    ☐ Baca neki warning u testovima.
    ☐ Debug, breakpoint na QuestionRepository.cs:GetQuestionSummariesAsync()
      ☐ Open Locals
      ☐ 'searchQueryLowercase' threw an exception of type 'System.NullReferenceException'

  Nice To Have:
    ☐ User endpoint
      ☐ Retrieve user by id. Allow anonymous.
      ☐ User 
    ☐ Po repoima ima glupih queryja, rade .Where() pa .ProjectTo, pa .Single. To se može skratiti, pogledaj USerRepository.GetUser()
    ☐ Repository: switch from .ProjectTo<T>() to .Projector<T>()
    ☐ VotesSum je loš podatak. Upvote i downvote će rezultirati nulom, a to nije ok. * Sad ovo opet čitam, nije točno to što sam napisao. +1 pa -1 trebaju na front endu rezultirati nulom. Ali interno trebamo voditi računa o broju jednih i drugih da znamo procesuirati zato jer ne nosi +1 nužno (?) isti broj bodova kao i -1.
    ☐ POST question {body: "", title: "", tags: []} - how does it behave?
    ☐ MaximumPageSize nema efekta.
    ☐ TagIds should be renamed to Tags.
    ☐ Da li q/a/c.VotesSum uistinu potreban? Razmisli o tome kako će se q/a/c queryati i da li je VotesSum uistinu optimizacija? Ako ćemo micati VotesSum, razmisliti kako će se taj podatak vidjeti onda na queryjima (join, count), te što je sa orderingom u toj situaciji?
    ☐ Riješiti ovo gore prije nego odem predaleko. Onda treba QuestionSummary proglasiti gotovim i krenuti na idući endpoint na listi.
    ☐ Na dosta mjesta u servisima povučemo usera da bi napravili neku ručnu validaciju down the line, ali nikad ne reagiramo ako tog usera nema u sustavu. Razmisliti.
    ☐ Upravo sam išao implementirati novi resource parameters. Stvar je ajde-de, razumljiva, ali samo mapiranje propertyja između view modela i application modela (u PropertyMappingService.cs) je malo icky. Mislim da bi to trebalo izvesti preko atributa na view modelu.
    ☐ Čudno puno ima situacija gdje se ne tracka upravo dodan related entity. Npr. Kad postam novi answer, onda moram ručno napraviti .AddAsync(answer). To ne bi trebalo tako funkcionirati.
    ☐ Pregledati svaki query i vidjeti da li je Tracking ili NoTracking i da li je odabir ispravan.
    ☐ Answer View Model (GET) trebaju imati i podatak kad je answer prihvaćen.
    ☐ Napraviti readme: kako izgleda projekt, kako ga zbildati, pokrenuti.
      ☐ Api
      ☐ Client App
    ☐ API Advanced
      ☐ Cacheing
      ☐ Logging
      ☐ Review RESTful project for clues
      ☐ Security
    ☐ Razraditi jobove
    ☐ Razraditi evente i event handling
    ☐ .editorconfig
    ☐ Endpoints
      ☐ /api/tags
        ☐ GET
        ☐ POST
      ☐ /api/tags/{name}
        ☐ GET
        ☐ This will need more thinking through.
      ☐ /api/users
        ☐ This will need more thinking through.
      ☐ /api/questions/{id}/vote
        ☐ POST
      ☐ /api/questions/{id}/vote/{id}
        ☐ DELETE
      ☐ /api/questions/{questionId}/comments/{commentId}/vote
        ☐ POST
      ☐ /api/questions/{questionId}/comments/{commentId}/vote/{id}
        ☐ DELETE
      ☐ /api/questions/{questionId}/answers/{answerId}/vote
        ☐ POST
      ☐ /api/questions/{questionId}/answers/{answerId}/vote/{id}
        ☐ DELETE
      ☐ /api/questions/{questionId}/answers/{answerId}/comments/{commentId}/vote
        ☐ POST
      ☐ /api/questions/{questionId}/answers/{answerId}/comments/{commentId}/vote/{id}
        ☐ DELETE