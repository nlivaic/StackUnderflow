## learn more about nginx reverse proxy configuration here:
## https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/
worker_processes 1;
events { worker_connections 1024; }

http {
    sendfile on;
    large_client_header_buffers 4 32k;

    # "identity" is a made up name, used as a local identifier within this file.
    upstream identity {
        # "stackunderflow.identity" and the port must match 
        # the service name and container port in docker-compose.yml file.
        server stackunderflow.identity:7000;
    }
    
    server {        
        # Port the nginx is listening on.
        # listen 443 ssl;
        listen 5100;
        # Generating certificates and configuring nginx for SSL: https://bit.ly/38IGnFV
        #ssl_certificate /etc/ssl/certs/id-local.globomantics.com.crt;
        #ssl_certificate_key /etc/ssl/private/id-local.globomantics.com.key;
        
        # "id-stackunderflow.identity" is a made up DNS name for identity server.
        # To make this work locally, add "127.0.0.1 id-local.stackunderflow.com"
        # to hosts file.
        server_name id-local.stack-underflow.com;
        
        location / {
            proxy_pass         http://identity;     # Must match the upstream name defined for IdSrv.
            proxy_redirect     off;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host:5200;     # Make sure to provide nginx Docker container's host(!) port here.
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_buffer_size           128k;
            proxy_buffers               4 256k;
            proxy_busy_buffers_size     256k;
        }
    }   
}